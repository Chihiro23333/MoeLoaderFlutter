meta:
  name: "pixiv.net"

options: &OPTIONS
  - id: "mode"
    desc: "排行榜"
    items:
      - { desc: "今日", param: "&mode=daily" }
      - { desc: "本周", param: "&mode=weekly" }
      - { desc: "本月", param: "&mode=monthly" }
      - { desc: "新人", param: "&mode=rookie" }
      - { desc: "原创", param: "&mode=original" }
      - { desc: "AI生成", param: "&mode=daily_ai" }
      - { desc: "受男性欢迎", param: "&mode=male" }
      - { desc: "受女性欢迎", param: "&mode=female" }
custom:
  url:
    homePage:
      link: "https://www.pixiv.net/ranking.php?p=${page}&format=json${mode}"
      options:
        *OPTIONS
    searchPage:
      link: "https://www.pixiv.net/ajax/search/artworks/${keyword}?word=${tag}&order=date_d&mode=all&p=${page}&csw=0&s_mode=s_tag_full&type=all&lang=z"
      options:
        *OPTIONS

  display:
    homePage:
      columnCount: 6
      aspectRatio: 1.0

  headers:
    Referer: "https://www.pixiv.net/"
    User-Agent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"

homePage:
  onParseResult:
    contentType: "json"
    list:
      getNodes: { jsonpath: "$.contents" }
      foreach:
        coverUrl:
          get: { jsonpath: ".url" }
        href:
          get: { jsonpath: ".illust_id" }
          format:
            - concat: { start: "https://www.pixiv.net/artworks/", end: "" }
        width:
          get: { jsonpath: ".width" }
        height:
          get: { jsonpath: ".height" }
        id:
          get: { jsonpath: ".illust_id" }
        author:
          get: { jsonpath: ".user_name" }
        authorId:
          get: { jsonpath: ".user_id" }
        characters:
          get: { jsonpath: ".title" }
        tagList:
          list:
            getNodes: { jsonpath: ".tags" }
            foreach:
              desc:
                get: { jsonpath: "" }
              tag:
                get: { jsonpath: "" }

searchPage:
  onParseResult:
    contentType: "json"
    list:
      getNodes: { jsonpath: "$..illustManga.data" }
      foreach:
        coverUrl:
          get: { jsonpath: ".url" }
        href:
          get: { jsonpath: ".id" }
          format:
            - concat: { start: "https://www.pixiv.net/artworks/", end: "" }
        tagList:
          list:
            getNodes: { jsonpath: ".tags" }
            foreach:
              desc:
                get: { jsonpath: "" }
              tag:
                get: { jsonpath: "" }

detailPage:
  onValidateResult:
    - regex: { regex: '"regular":null', action: "login" }
  onPreprocessResult:
    contentType: "html"
    get: { cssSelector: "#meta-preload-data", attr: "content" }
  onParseResult:
    contentType: "json"
    object:
      url:
        get: { jsonpath: "$..illust..regular" }
      rawUrl:
        get: { jsonpath: "$..illust..original" }
      tagList:
        list:
          getNodes: { jsonpath: "$..illust..userIllusts..tags" }
          foreach:
            desc:
              get: { jsonpath: "" }
            tag:
              get: { jsonpath: "" }

authorPage:
  onValidateResult:
    - regex: { regex: '"regular":null', action: "login" }
  onPreprocessResult:
    contentType: "html"
    get: { cssSelector: "#meta-preload-data", attr: "content" }
  onParseResult:
    list:
      getElements: { cssSelector: "li[size]" }
      foreach:
        coverUrl:
          get: { cssSelector: "div[type=illust] img", attr: "src" }
        href:
          get: { cssSelector: "div[type=illust] a", attr: "href" }
          format:
            - concat: { start: "https://www.pixiv.net/", end: "" }
        tagStr:
          get: { cssSelector: "div[type=illust] img", attr: "alt" }
        tagSplit:
          get: { default: " " }
        width:
          get: { cssSelector: "div[type=illust] > div", attr: "width" }
        height:
          get: { cssSelector: "div[type=illust] > div", attr: "height" }
        id:
          get: { cssSelector: "div[type=illust] a", attr: "href" }
          format:
            - replaceAll: { from: "/artworks/", to: "" }