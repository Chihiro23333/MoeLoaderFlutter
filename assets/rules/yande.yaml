meta:
  name: "yande.re"

options: &OPTIONS
  - id: "rating"
    desc: "评级"
    items:
      - { desc: "safe", param: "rating%3Asafe+" }
      - { desc: "all", param: "" }
      - { desc: "questionable", param: "rating%3Aquestionable+" }
      - { desc: "explicit", param: "rating%3Aexplicit+" }
  - id: "pageCount"
    desc: "每页数量"
    items:
      - { desc: "默认", param: "" }
      - { desc: "50", param: "&limit=50" }
      - { desc: "80", param: "&limit=80" }

custom:
  url:
    homePage:
      link: "https://yande.re/post?page=${page}&tags=${rating}${pageCount}"
      options:
        *OPTIONS
    searchPage:
      link: "https://yande.re/post?page=${page}&tags=${rating}${keyword}${pageCount}"
      keywordConnector: "_"
      options:
        *OPTIONS

  display:
    homePage:
      columnCount: 6
      aspectRatio: 1.65

homePage: &HOMEPAGE
  onParseResult:
    list:
      getElements: { cssSelector: "#post-list-posts li" }
      foreach:
        type:
          get: { default: "pool" }
        coverUrl:
          get: { cssSelector: "a[class=thumb] img", attr: "src" }
        href:
          get: { cssSelector: "a[class=thumb]", attr: "href" }
          format:
            - concat: { start: "https://yande.re", end: "" }
        tagStr:
          get: { cssSelector: "a[class=thumb] img", attr: "alt" }
          find:
            - regex: { regex: "(?<=Tags:).*?(?=User:)", index: 0 }
        tagSplit:
          get: { default: " " }
        width:
          get: { cssSelector: "a[class=thumb] img", attr: "width" }
        height:
          get: { cssSelector: "a[class=thumb] img", attr: "height" }
        id:
          get: { cssSelector: "", attr: "id" }
          format:
            - replaceAll: { from: "p", to: "" }

searchPage:
  *HOMEPAGE

detailPage:
  onParseResult:
    object:
      url:
        get: { cssSelector: "#image", attr: "src" }
      bigUrl:
        get: { cssSelector: "#highres", attr: "href" }
      rawUrl:
        get: { cssSelector: "#png", attr: "href" }
      tagStr:
        get: { cssSelector: "#image", attr: "alt" }
      tagSplit:
        get: { default: " " }
      width:
        get: { cssSelector: "a[class=thumb] img", attr: "width" }
      height:
        get: { cssSelector: "a[class=thumb] img", attr: "height" }
      id:
        get: { cssSelector: "#stats", text: "" }
        find:
          - regex: { regex: "(?<=Id:).*?(?=Posted:)", index: 0 }
      author:
        get: { cssSelector: "#stats", text: "" }
        find:
          - regex: { regex: "(?<=by ).*?(?=Size:)", index: 0 }
      dimensions:
        get: { cssSelector: "#stats", text: "" }
        find:
          - regex: { regex: "(?<=Size: ).*?(?= )", index: 0 }
      source:
        get: { cssSelector: "[rel^='canonical']", attr: "href" }